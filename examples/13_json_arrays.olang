// ============================================
// JSON-LIKE ARRAYS (arrayJson)
// ============================================

print("╔════════════════════════════════════╗");
print("║   JSON-LIKE ARRAY DESTEĞI  📊     ║");
print("╚════════════════════════════════════╝");
print("");

// ----------------------------------------
// 1. TEMEL JSON ARRAY
// ----------------------------------------
print("=== 1. TEMEL JSON ARRAY ===");
print("");

// Kullanıcı verileri (JSON benzeri)
arrayJson kullanici1 = ["Ali", 25, true, "Mühendis"];
arrayJson kullanici2 = ["Ayşe", 28, false, "Doktor"];
arrayJson kullanici3 = ["Veli", 30, true, "Öğretmen"];

print("Kullanıcı 1:", kullanici1);
print("Kullanıcı 2:", kullanici2);
print("Kullanıcı 3:", kullanici3);
print("");

// Erişim
str isim1 = kullanici1[0];
int yas1 = kullanici1[1];
bool aktif1 = kullanici1[2];
str meslek1 = kullanici1[3];

print("Ad:", isim1);
print("Yaş:", yas1);
print("Aktif:", aktif1);
print("Meslek:", meslek1);
print("");

// ----------------------------------------
// 2. NESTED ARRAYS (İç İçe Diziler)
// ----------------------------------------
print("=== 2. İÇ İÇE DİZİLER ===");
print("");

// Matris benzeri yapı
arrayJson satir1 = [1, 2, 3];
arrayJson satir2 = [4, 5, 6];
arrayJson satir3 = [7, 8, 9];

print("Satır 1:", satir1);
print("Satır 2:", satir2);
print("Satır 3:", satir3);

// Erişim
int deger11 = satir1[0];  // 1
int deger12 = satir1[1];  // 2
int deger22 = satir2[1];  // 5
int deger33 = satir3[2];  // 9

print("Matris[1,1] =", deger11);
print("Matris[1,2] =", deger12);
print("Matris[2,2] =", deger22);
print("Matris[3,3] =", deger33);
print("");

// ----------------------------------------
// 3. KARMA VERİ YAPILARİ
// ----------------------------------------
print("=== 3. KARMA VERİ YAPILARI ===");
print("");

// API Response benzeri
arrayJson apiResponse = [
    200,                    // Status code
    "Success",              // Message
    true,                   // Success flag
    "2025-10-09"           // Date
];

print("API Response:", apiResponse);
print("Status Code:", apiResponse[0]);
print("Message:", apiResponse[1]);
print("Success:", apiResponse[2]);
print("Date:", apiResponse[3]);
print("");

// ----------------------------------------
// 4. KULLANICI LİSTESİ (JSON-like)
// ----------------------------------------
print("=== 4. KULLANICI LİSTESİ ===");
print("");

arrayJson users = [];

// Kullanıcı ekle (JSON benzeri)
arrayJson user1 = ["ahmet", "ahmet@mail.com", 25];
arrayJson user2 = ["mehmet", "mehmet@mail.com", 30];
arrayJson user3 = ["ayse", "ayse@mail.com", 28];

push(users, user1);
push(users, user2);
push(users, user3);

print("Kullanıcılar:", users);
print("Toplam kullanıcı:", length(users));
print("");

// ----------------------------------------
// 5. PRODUCT DATA (E-ticaret Benzeri)
// ----------------------------------------
print("=== 5. ÜRÜN VERİLERİ ===");
print("");

// Ürün: [ID, İsim, Fiyat, Stok, Aktif]
arrayJson urun1 = [101, "Laptop", 5000, 10, true];
arrayJson urun2 = [102, "Mouse", 150, 50, true];
arrayJson urun3 = [103, "Keyboard", 300, 30, false];

print("Ürün 1:", urun1);
print("Ürün 2:", urun2);
print("Ürün 3:", urun3);

// Ürün bilgilerini yazdır
print("");
print("Ürün Detayları:");
print("ID:", urun1[0], "- İsim:", urun1[1], "- Fiyat:", urun1[2], "TL");
print("Stok:", urun1[3], "- Aktif:", urun1[4]);
print("");

// ----------------------------------------
// 6. CONFIG DATA (Ayarlar Benzeri)
// ----------------------------------------
print("=== 6. AYARLAR (Config) ===");
print("");

arrayJson config = [
    "OLang",           // App name
    "1.2.1",           // Version
    true,              // Debug mode
    8080,              // Port
    "localhost"        // Host
];

print("Uygulama Ayarları:");
print("App:", config[0]);
print("Version:", config[1]);
print("Debug:", config[2]);
print("Port:", config[3]);
print("Host:", config[4]);
print("");

// ----------------------------------------
// 7. İSTATİSTİK VERİLERİ
// ----------------------------------------
print("=== 7. İSTATİSTİK VERİLERİ ===");
print("");

// Aylık satış verisi: [Ay, Satış, Kar, Aktif]
arrayJson ocak = ["Ocak", 10000, 2000, true];
arrayJson subat = ["Şubat", 15000, 3000, true];
arrayJson mart = ["Mart", 12000, 2400, false];

print("Ocak:", ocak);
print("Şubat:", subat);
print("Mart:", mart);
print("");

// Toplam hesapla
int toplamSatis = ocak[1] + subat[1] + mart[1];
int toplamKar = ocak[2] + subat[2] + mart[2];

print("Toplam Satış:", toplamSatis, "TL");
print("Toplam Kar:", toplamKar, "TL");
print("");

// ----------------------------------------
// 8. GEOLOCATION DATA
// ----------------------------------------
print("=== 8. KONUM VERİLERİ ===");
print("");

// [Şehir, Enlem, Boylam, Nüfus (milyon)]
arrayJson istanbul = ["İstanbul", 41.0, 29.0, 15];
arrayJson ankara = ["Ankara", 39.9, 32.8, 5];
arrayJson izmir = ["İzmir", 38.4, 27.1, 4];

print("İstanbul:", istanbul);
print("Ankara:", ankara);
print("İzmir:", izmir);

print("");
print("Koordinatlar:");
print(istanbul[0], "→ Lat:", istanbul[1], "Lng:", istanbul[2]);
print(ankara[0], "→ Lat:", ankara[1], "Lng:", ankara[2]);
print(izmir[0], "→ Lat:", izmir[1], "Lng:", izmir[2]);
print("");

// ----------------------------------------
// 9. EVENT LOG (Olay Kaydı)
// ----------------------------------------
print("=== 9. OLAY KAYDI ===");
print("");

// [ID, Event, Timestamp, User, Success]
arrayJson event1 = [1, "login", "10:30:00", "Ali", true];
arrayJson event2 = [2, "logout", "11:45:00", "Ali", true];
arrayJson event3 = [3, "error", "12:00:00", "System", false];

print("Olay 1:", event1);
print("Olay 2:", event2);
print("Olay 3:", event3);

// Başarılı olay sayısı
int basarili = 0;
if (event1[4]) {
    basarili++;
}
if (event2[4]) {
    basarili++;
}
if (event3[4]) {
    basarili++;
}

print("");
print("Toplam başarılı olay:", basarili);
print("");

// ----------------------------------------
// 10. SCORE BOARD (Skor Tablosu)
// ----------------------------------------
print("=== 10. SKOR TABLOSU ===");
print("");

// [Oyuncu, Puan, Seviye, Aktif]
arrayJson player1 = ["Ali", 1500, 10, true];
arrayJson player2 = ["Veli", 2000, 15, true];
arrayJson player3 = ["Ayşe", 1800, 12, false];

print("Oyuncu 1:", player1);
print("Oyuncu 2:", player2);
print("Oyuncu 3:", player3);

// En yüksek puan
int maxPuan = player1[1];
str champion = player1[0];

if (player2[1] > maxPuan) {
    maxPuan = player2[1];
    champion = player2[0];
}

if (player3[1] > maxPuan) {
    maxPuan = player3[1];
    champion = player3[0];
}

print("");
print("🏆 Şampiyon:", champion);
print("Puan:", maxPuan);
print("");

// ----------------------------------------
// SONUÇ
// ----------------------------------------
print("╔════════════════════════════════════╗");
print("║   ✅ JSON ARRAYS ÇALIŞIYOR!       ║");
print("╚════════════════════════════════════╝");
print("");

print("arrayJson Özellikleri:");
print("  ✅ Karışık tip desteği");
print("  ✅ İç içe diziler");
print("  ✅ JSON-like veri yapıları");
print("  ✅ API response formatı");
print("  ✅ Kullanıcı, ürün, config verileri");
print("  ✅ Okunabilir ve açıklayıcı");
print("");
print("=== TEST TAMAMLANDI ===");

