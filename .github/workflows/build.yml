name: Cross-Platform Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake
      
      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh
      
      - name: Test
        run: |
          ./olang examples/01_hello_world.olang
          ./olang examples/10_test_phase1.olang
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: olang-linux
          path: olang

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: brew install cmake
      
      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh
      
      - name: Test
        run: |
          ./olang examples/01_hello_world.olang
          ./olang examples/10_test_phase1.olang
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: olang-macos
          path: olang

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install MinGW
        run: |
          choco install mingw -y
      
      - name: Build
        shell: cmd
        run: |
          call build.bat
      
      - name: Test
        shell: cmd
        run: |
          olang.exe examples\01_hello_world.olang
          olang.exe examples\10_test_phase1.olang
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: olang-windows
          path: olang.exe

  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            olang-linux/olang
            olang-macos/olang
            olang-windows/olang.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

