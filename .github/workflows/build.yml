name: Cross-Platform Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake
      
      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh
        timeout-minutes: 5
      
      - name: Smoke test (truncated output)
        run: |
          ./tulpar examples/01_hello_world.tpr | head -n 80
        timeout-minutes: 2
      
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp tulpar dist/tulpar-linux-x64
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tulpar-linux-x64
          path: dist/tulpar-linux-x64
  
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: brew install cmake
      
      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh
        timeout-minutes: 5
      
      - name: Smoke test (truncated output)
        run: |
          ./tulpar examples/01_hello_world.tpr | head -n 80
        timeout-minutes: 2
      
      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp tulpar dist/tulpar-macos-universal
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tulpar-macos-universal
          path: dist/tulpar-macos-universal
  
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install MinGW
        run: |
          choco install mingw -y
      
      - name: Set UTF-8 encoding
        shell: powershell
        run: |
          chcp 65001
          $env:PYTHONIOENCODING = "utf-8"
          $env:LANG = "en_US.UTF-8"
      
      - name: Build
        shell: cmd
        run: |
          call build.bat
        timeout-minutes: 10
        env:
          LANG: en_US.UTF-8
          PYTHONIOENCODING: utf-8
      
      - name: Smoke test (truncated output)
        shell: powershell
        run: |
          chcp 65001
          .\tulpar.exe examples\01_hello_world.tpr | Select-Object -First 80
        timeout-minutes: 2
      
      - name: Prepare artifact
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item tulpar.exe dist/tulpar-windows-x64.exe
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tulpar-windows-x64
          path: dist/tulpar-windows-x64.exe
  
  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    # Sadece ana branchlerde otomatik release oluÅŸtur
    if: |
      github.event_name == 'push' && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: tulpar-*
          merge-multiple: true
      
      - name: Compute release tag
        id: ver
        shell: bash
        run: |
          # Tag format: vYYYY.MM.DD.RUN
          TAG="v$(date +%Y.%m.%d).${GITHUB_RUN_NUMBER}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          name: TulparLang ${{ steps.ver.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            tulpar-windows-x64.exe
            tulpar-linux-x64
            tulpar-macos-universal
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

